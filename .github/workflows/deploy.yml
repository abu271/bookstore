name: Bookstore Build & Deployment
# ---= Deploy =---
# 1. provide manual option to deploy to PROD
# 2. use shell commands or script to ssh to selected server
# 3. copy over the compose file and startup containers

on:
  push:
    branches:
      - main
      - misc/pipeline-setup

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: "16.x"
      - name: Install vite globally
        run: npm install --global vite
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract version and set it to TAG env var
        run: |
          echo "TAG=$(jq -r '.version' package.json)" >> $GITHUB_ENV
      - name: Build Docker image
        run: |
            docker build -t bookstore:${{ env.TAG }} .
            docker tag bookstore_v${{ env.TAG }} ${{ secrets.DOCKER_USER }}/abudev:bookstore_v${{ env.TAG }}
      - name: Upload Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USER }}/abudev:bookstore_v${{ env.TAG }}

  # deploy:
  #   name: Deploy to PROD
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #   - name: Deploy to Production
  #     uses: fifsky/ssh-action@master
  #     with:
  #       command: |
  #         git pull origin master
  #         cd /home/thor/apps/Portfolio-website/.github/workflows

  #         npm ci
  #         npm run build

  #         pm2 stop ../../ecosystem.config.js
  #         pm2 start ../../ecosystem.config.js

  #       host: ${{ secrets.HOST }}
  #       user: ${{ secrets.USERNAME }}
  #       key: ${{ secrets.SSH_KEY }}